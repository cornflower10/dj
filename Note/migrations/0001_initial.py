# Generated by Django 2.1.5 on 2019-03-29 16:23

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('merchant_id', models.CharField(max_length=20)),
                ('image_url', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=20)),
                ('desc', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=1)),
                ('status', models.CharField(max_length=1, verbose_name='上架，2下架')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('merchant_id', models.CharField(max_length=20)),
                ('image_url', models.CharField(max_length=100)),
                ('food_id', models.CharField(max_length=20)),
                ('user_id', models.CharField(max_length=20)),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
            ],
        ),
        migrations.CreateModel(
            name='MerchantInfo',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(default=1, max_length=1, verbose_name='状态1未审核2审核中3审核通过')),
                ('phone', models.CharField(max_length=11)),
                ('name', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=50)),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('end_vip_time', models.DateTimeField(verbose_name='vip到期日')),
                ('business_flag', models.CharField(max_length=1, verbose_name='1营业中，2暂停营业')),
                ('image_url', models.CharField(max_length=100)),
                ('desc', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=50)),
                ('tag', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(default=1, max_length=1, verbose_name='状态1未审核2审核中3审核通过')),
                ('phone', models.CharField(max_length=11)),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('end_vip_time', models.DateTimeField(verbose_name='vip到期日')),
                ('business_flag', models.CharField(max_length=1, verbose_name='1营业中，2暂停营业')),
                ('image_url', models.CharField(max_length=100)),
                ('image_url_id', models.CharField(max_length=20)),
                ('desc', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=50)),
                ('tag', models.CharField(max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
